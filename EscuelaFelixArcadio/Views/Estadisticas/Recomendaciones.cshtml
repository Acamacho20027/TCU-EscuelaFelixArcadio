@{
    ViewBag.Title = "Recomendaciones Inteligentes";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/Content/estadisticas.css?v=30.0" rel="stylesheet" />
}

<div class="estadisticas-container">
    <!-- Header Principal -->
    <div class="estadisticas-header">
        <div class="header-left">
            <a href="@Url.Action("Index")" class="btn-volver">
                <i class="fas fa-arrow-left"></i>
                Volver a Estadísticas
            </a>
        </div>
        <h1 class="estadisticas-title">@ViewBag.Title</h1>
        <div class="header-actions"></div>
    </div>

    <!-- Estadísticas Generales -->
    <div class="estadisticas-grid">
        <div class="estadistica-card">
            <div class="estadistica-valor" id="totalRecomendaciones">-</div>
            <div class="estadistica-label">TOTAL RECOMENDACIONES</div>
        </div>
        <div class="estadistica-card">
            <div class="estadistica-valor" id="recomendacionesAlta">-</div>
            <div class="estadistica-label">PRIORIDAD ALTA</div>
        </div>
        <div class="estadistica-card">
            <div class="estadistica-valor" id="recomendacionesMedia">-</div>
            <div class="estadistica-label">PRIORIDAD MEDIA</div>
        </div>
        <div class="estadistica-card">
            <div class="estadistica-valor" id="recomendacionesBaja">-</div>
            <div class="estadistica-label">PRIORIDAD BAJA</div>
        </div>
        <div class="estadistica-card">
            <div class="estadistica-valor" id="ahorroEstimado">-</div>
            <div class="estadistica-label">AHORRO ESTIMADO</div>
        </div>
    </div>

    <!-- Gráfico de Análisis de Patrones -->
    <div class="graficos-container">
        <div class="grafico-header">
            <h3 class="grafico-title">Análisis de Patrones de Uso</h3>
            <div class="grafico-controls">
                <button class="btn-exportar" onclick="exportarGraficoComoImagen('graficoPatrones', 'analisis-patrones-uso')">
                    <i class="fas fa-download"></i>
                    Exportar
                </button>
            </div>
        </div>
        <div class="grafico-canvas" id="graficoPatrones">
            <div class="loading">Cargando análisis de patrones...</div>
        </div>
    </div>

    <!-- Recomendaciones de Equipamiento -->
    <div class="recomendaciones-container">
        <div class="filtros-header">
            <div class="filtros-title-group">
                <i class="fas fa-dumbbell filtros-icon"></i>
                <h3>Recomendaciones de Equipamiento</h3>
            </div>
            <div class="grafico-controls">
                <button class="btn-filtrar" onclick="cargarRecomendacionesEquipamiento()">
                    <i class="fas fa-search"></i>
                    Generar Recomendaciones
                </button>
            </div>
        </div>
        <div id="recomendacionesEquipamiento">
            <div class="loading">Generando recomendaciones de equipamiento...</div>
        </div>
    </div>

    <!-- Recomendaciones de Mantenimiento -->
    <div class="recomendaciones-container">
        <div class="filtros-header">
            <div class="filtros-title-group">
                <i class="fas fa-tools filtros-icon"></i>
                <h3>Recomendaciones de Mantenimiento</h3>
            </div>
            <div class="grafico-controls">
                <button class="btn-filtrar" onclick="cargarRecomendacionesMantenimiento()">
                    <i class="fas fa-search"></i>
                    Generar Recomendaciones
                </button>
            </div>
        </div>
        <div id="recomendacionesMantenimiento">
            <div class="loading">Generando recomendaciones de mantenimiento...</div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let chartPatrones = null;

        $(document).ready(function() {
            // Cargar recomendaciones iniciales
            cargarRecomendacionesHorarios();
            cargarRecomendacionesEquipamiento();
            cargarRecomendacionesMantenimiento();
            cargarGraficoPatrones();
            
            // Actualizar resumen después de cargar todo
            setTimeout(actualizarResumen, 2000);
        });

        function cargarRecomendacionesHorarios() {
            $('#recomendacionesHorarios').html('<div class="loading">Generando recomendaciones de horarios...</div>');
            
            // Simular datos de ejemplo
            setTimeout(function() {
                const datosEjemplo = {
                    HorariosDemandados: [
                        { DiaSemana: 'Lunes', HoraInicio: 8, Cantidad: 15, TasaExito: 95 },
                        { DiaSemana: 'Martes', HoraInicio: 14, Cantidad: 12, TasaExito: 92 },
                        { DiaSemana: 'Miércoles', HoraInicio: 16, Cantidad: 18, TasaExito: 88 },
                        { DiaSemana: 'Jueves', HoraInicio: 10, Cantidad: 14, TasaExito: 90 },
                        { DiaSemana: 'Viernes', HoraInicio: 18, Cantidad: 20, TasaExito: 85 }
                    ],
                    HorariosMenosDemandados: [
                        { DiaSemana: 'Lunes', HoraInicio: 6, Cantidad: 2, TasaExito: 100 },
                        { DiaSemana: 'Martes', HoraInicio: 20, Cantidad: 3, TasaExito: 95 },
                        { DiaSemana: 'Miércoles', HoraInicio: 7, Cantidad: 1, TasaExito: 100 },
                        { DiaSemana: 'Jueves', HoraInicio: 21, Cantidad: 4, TasaExito: 90 },
                        { DiaSemana: 'Viernes', HoraInicio: 5, Cantidad: 1, TasaExito: 100 }
                    ],
                    Recomendaciones: [
                        { Tipo: 'Horario', Prioridad: 'Alta', Descripcion: 'Considerar extender horarios matutinos', Beneficio: 'Aumentar disponibilidad' },
                        { Tipo: 'Horario', Prioridad: 'Media', Descripcion: 'Optimizar horarios vespertinos', Beneficio: 'Mejorar distribución' }
                    ]
                };
                mostrarRecomendacionesHorarios(datosEjemplo);
            }, 1000);
        }

        function mostrarRecomendacionesHorarios(datos) {
            let html = '';
            
            // Horarios más demandados
            html += '<h4>Horarios Más Demandados</h4>';
            html += '<table class="tabla-datos"><thead><tr><th>Día</th><th>Hora</th><th>Cantidad</th><th>Tasa Éxito</th></tr></thead><tbody>';
            datos.HorariosDemandados.forEach(h => {
                html += `<tr>
                    <td>${h.DiaSemana}</td>
                    <td>${h.HoraInicio}:00</td>
                    <td>${h.Cantidad}</td>
                    <td>${h.TasaExito.toFixed(1)}%</td>
                </tr>`;
            });
            html += '</tbody></table>';
            
            // Horarios menos demandados
            html += '<h4>Horarios Menos Demandados</h4>';
            html += '<table class="tabla-datos"><thead><tr><th>Día</th><th>Hora</th><th>Cantidad</th><th>Tasa Éxito</th></tr></thead><tbody>';
            datos.HorariosMenosDemandados.forEach(h => {
                html += `<tr>
                    <td>${h.DiaSemana}</td>
                    <td>${h.HoraInicio}:00</td>
                    <td>${h.Cantidad}</td>
                    <td>${h.TasaExito.toFixed(1)}%</td>
                </tr>`;
            });
            html += '</tbody></table>';
            
            // Recomendaciones específicas
            if (datos.Recomendaciones && datos.Recomendaciones.length > 0) {
                html += '<h4>Recomendaciones Específicas</h4>';
                datos.Recomendaciones.forEach(r => {
                    html += `<div class="recomendacion-item">
                        <div class="recomendacion-header">
                            <div class="recomendacion-tipo">${r.Tipo}</div>
                            <div class="recomendacion-prioridad ${r.Prioridad.toLowerCase()}">${r.Prioridad}</div>
                        </div>
                        <div class="recomendacion-descripcion">${r.Descripcion}</div>
                        <div class="recomendacion-beneficio">Beneficio: ${r.Beneficio}</div>
                    </div>`;
                });
            }
            
            $('#recomendacionesHorarios').html(html);
        }

        function cargarRecomendacionesEquipamiento() {
            $('#recomendacionesEquipamiento').html('<div class="loading">Generando recomendaciones de equipamiento...</div>');
            
            // Simular datos de ejemplo
            setTimeout(function() {
                const datosEjemplo = {
                    MotivosFrecuentes: [
                        { Motivo: 'Clase de Educación Física', Cantidad: 45, TasaDevolucion: 95 },
                        { Motivo: 'Práctica Deportiva', Cantidad: 32, TasaDevolucion: 88 },
                        { Motivo: 'Competencia', Cantidad: 18, TasaDevolucion: 92 },
                        { Motivo: 'Recreación', Cantidad: 12, TasaDevolucion: 85 }
                    ],
                    TiemposPorMotivo: [
                        { Motivo: 'Clase de Educación Física', TiempoPromedio: 2.5, Cantidad: 45 },
                        { Motivo: 'Práctica Deportiva', TiempoPromedio: 3.2, Cantidad: 32 },
                        { Motivo: 'Competencia', TiempoPromedio: 1.8, Cantidad: 18 },
                        { Motivo: 'Recreación', TiempoPromedio: 4.1, Cantidad: 12 }
                    ],
                    Recomendaciones: [
                        { Tipo: 'Equipamiento', Prioridad: 'Alta', Descripcion: 'Aumentar stock de balones de fútbol', Beneficio: 'Reducir conflictos' },
                        { Tipo: 'Equipamiento', Prioridad: 'Media', Descripcion: 'Adquirir más raquetas de tenis', Beneficio: 'Mejorar disponibilidad' }
                    ]
                };
                mostrarRecomendacionesEquipamiento(datosEjemplo);
            }, 1200);
        }

        function mostrarRecomendacionesEquipamiento(datos) {
            let html = '';
            
            // Motivos más frecuentes
            html += '<h4>Motivos Más Frecuentes</h4>';
            html += '<table class="tabla-datos"><thead><tr><th>Motivo</th><th>Cantidad</th><th>Tasa Devolución</th></tr></thead><tbody>';
            datos.MotivosFrecuentes.forEach(m => {
                html += `<tr>
                    <td>${m.Motivo}</td>
                    <td>${m.Cantidad}</td>
                    <td>${m.TasaDevolucion.toFixed(1)}%</td>
                </tr>`;
            });
            html += '</tbody></table>';
            
            // Tiempos por motivo
            html += '<h4>Tiempos de Préstamo por Motivo</h4>';
            html += '<table class="tabla-datos"><thead><tr><th>Motivo</th><th>Tiempo Promedio (días)</th><th>Cantidad</th></tr></thead><tbody>';
            datos.TiemposPorMotivo.forEach(t => {
                html += `<tr>
                    <td>${t.Motivo}</td>
                    <td>${t.TiempoPromedio.toFixed(1)}</td>
                    <td>${t.Cantidad}</td>
                </tr>`;
            });
            html += '</tbody></table>';
            
            // Recomendaciones específicas
            if (datos.Recomendaciones && datos.Recomendaciones.length > 0) {
                html += '<h4>Recomendaciones Específicas</h4>';
                datos.Recomendaciones.forEach(r => {
                    html += `<div class="recomendacion-item">
                        <div class="recomendacion-header">
                            <div class="recomendacion-tipo">${r.Tipo}</div>
                            <div class="recomendacion-prioridad ${r.Prioridad.toLowerCase()}">${r.Prioridad}</div>
                        </div>
                        <div class="recomendacion-descripcion">${r.Descripcion}</div>
                        <div class="recomendacion-beneficio">Beneficio: ${r.Beneficio}</div>
                    </div>`;
                });
            }
            
            $('#recomendacionesEquipamiento').html(html);
        }

        function cargarRecomendacionesMantenimiento() {
            $('#recomendacionesMantenimiento').html('<div class="loading">Generando recomendaciones de mantenimiento...</div>');
            
            // Simular datos de ejemplo
            setTimeout(function() {
                const datosEjemplo = {
                    EquipamientoUtilizado: [
                        { Equipamiento: 'Balones de Fútbol', CantidadUsos: 45, TiempoTotalUso: 112.5, TasaDesgaste: 0.15 },
                        { Equipamiento: 'Raquetas de Tenis', CantidadUsos: 32, TiempoTotalUso: 102.4, TasaDesgaste: 0.22 },
                        { Equipamiento: 'Pelotas de Basketball', CantidadUsos: 28, TiempoTotalUso: 89.6, TasaDesgaste: 0.18 },
                        { Equipamiento: 'Conos de Entrenamiento', CantidadUsos: 38, TiempoTotalUso: 76.0, TasaDesgaste: 0.12 }
                    ],
                    Recomendaciones: [
                        { Tipo: 'Mantenimiento', Prioridad: 'Alta', Equipamiento: 'Balones de Fútbol', Descripcion: 'Revisar presión y estado general', AccionRecomendada: 'Calibración urgente' },
                        { Tipo: 'Mantenimiento', Prioridad: 'Media', Equipamiento: 'Raquetas de Tenis', Descripcion: 'Verificar tensión de cuerdas', AccionRecomendada: 'Reencordado programado' }
                    ]
                };
                mostrarRecomendacionesMantenimiento(datosEjemplo);
            }, 1500);
        }

        function mostrarRecomendacionesMantenimiento(datos) {
            let html = '';
            
            // Equipamiento utilizado
            html += '<h4>Equipamiento Más Utilizado</h4>';
            html += '<table class="tabla-datos"><thead><tr><th>Equipamiento</th><th>Usos</th><th>Tiempo Total</th><th>Tasa Desgaste</th></tr></thead><tbody>';
            datos.EquipamientoUtilizado.forEach(e => {
                html += `<tr>
                    <td>${e.Equipamiento}</td>
                    <td>${e.CantidadUsos}</td>
                    <td>${e.TiempoTotalUso.toFixed(1)} días</td>
                    <td>${(e.TasaDesgaste * 100).toFixed(1)}%</td>
                </tr>`;
            });
            html += '</tbody></table>';
            
            // Recomendaciones específicas
            if (datos.Recomendaciones && datos.Recomendaciones.length > 0) {
                html += '<h4>Recomendaciones de Mantenimiento</h4>';
                datos.Recomendaciones.forEach(r => {
                    html += `<div class="recomendacion-item">
                        <div class="recomendacion-header">
                            <div class="recomendacion-tipo">${r.Tipo}</div>
                            <div class="recomendacion-prioridad ${r.Prioridad.toLowerCase()}">${r.Prioridad}</div>
                        </div>
                        <div class="recomendacion-descripcion"><strong>${r.Equipamiento}:</strong> ${r.Descripcion}</div>
                        <div class="recomendacion-beneficio">Acción: ${r.AccionRecomendada}</div>
                    </div>`;
                });
            }
            
            $('#recomendacionesMantenimiento').html(html);
        }

        function cargarGraficoPatrones() {
            $('#graficoPatrones').html('<div class="loading">Cargando análisis de patrones...</div>');
            
            // Placeholder para gráfico de patrones
            const ctx = document.createElement('canvas');
            $('#graficoPatrones').html(ctx);
            
            if (chartPatrones) {
                chartPatrones.destroy();
            }
            
            chartPatrones = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Horarios Recomendados', 'Equipamiento Adicional', 'Mantenimiento Urgente', 'Mantenimiento Programado'],
                    datasets: [{
                        data: [25, 30, 15, 30],
                        backgroundColor: [
                            '#10b981',
                            '#3b82f6',
                            '#ef4444',
                            '#f59e0b'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Distribución de Recomendaciones'
                        }
                    }
                }
            });
        }

        function exportarDatos(tipo) {
            window.open('@Url.Action("ExportarDatos")' + 
                '?tipoDatos=' + tipo + 
                '&formato=excel', '_blank');
        }

        function exportarGraficoComoImagen(canvasId, nombreArchivo) {
            const canvas = document.getElementById(canvasId).querySelector('canvas');
            if (!canvas) {
                alert('No hay gráfico disponible para exportar');
                return;
            }

            // Crear un canvas temporal con mayor resolución
            const tempCanvas = document.createElement('canvas');
            const tempCtx = tempCanvas.getContext('2d');
            
            // Configurar dimensiones para mejor calidad
            tempCanvas.width = canvas.width * 2;
            tempCanvas.height = canvas.height * 2;
            
            // Escalar el contenido
            tempCtx.scale(2, 2);
            tempCtx.drawImage(canvas, 0, 0);
            
            // Convertir a imagen JPG
            const dataURL = tempCanvas.toDataURL('image/jpeg', 0.9);
            
            // Crear enlace de descarga
            const link = document.createElement('a');
            link.download = nombreArchivo + '.jpg';
            link.href = dataURL;
            
            // Simular click para descargar
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        // Actualizar resumen de recomendaciones
        function actualizarResumen() {
            $('#totalRecomendaciones').text('12');
            $('#recomendacionesAlta').text('3');
            $('#recomendacionesMedia').text('5');
            $('#recomendacionesBaja').text('4');
            $('#ahorroEstimado').text('₡1,250,000');
        }
    </script>
}