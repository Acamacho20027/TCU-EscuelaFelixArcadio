@model EscuelaFelixArcadio.Models.Documento

@{
    ViewBag.Title = Model.Titulo;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/Content/documento.css" rel="stylesheet" />
    <style>
        /* Override admin layout for full-screen viewer */
        body {
            overflow: hidden;
        }
        .main-content-wrapper {
            padding: 0 !important;
            margin: 0 !important;
        }
    </style>
}

<div class="documento-viewer-container">
    <!-- Viewer Header -->
    <div class="documento-viewer-header">
        <div class="documento-viewer-title">
            <div>
                <h1><i class="fas fa-file-pdf"></i> @Model.Titulo</h1>
                <div class="documento-viewer-meta">
                    <span class="documento-viewer-meta-item">
                        <i class="fas fa-tag"></i> @Model.TipoDocumento
                    </span>
                    <span class="documento-viewer-meta-item">
                        <i class="fas fa-calendar-alt"></i> @Model.FechaSubida.ToString("dd/MM/yyyy")
                    </span>
                    <span class="documento-viewer-meta-item">
                        <i class="fas fa-user"></i> @(Model.ApplicationUser?.UserName ?? "Desconocido")
                    </span>
                    <span class="documento-viewer-meta-item">
                        <i class="fas fa-database"></i> @Model.TamanoFormateado
                    </span>
                </div>
            </div>
        </div>
        
        <div class="documento-viewer-actions">
            <a href="@Url.Action("Download", new { id = Model.IdDocumento })" class="documento-btn-viewer btn-download">
                <i class="fas fa-download"></i> Descargar
            </a>
            <a href="@Url.Action("Index")" class="documento-btn-viewer">
                <i class="fas fa-times"></i> Cerrar
            </a>
        </div>
    </div>

    <!-- Viewer Controls -->
    <div class="documento-viewer-controls">
        <button id="btn-first-page" class="documento-viewer-control-btn" title="Primera página">
            <i class="fas fa-step-backward"></i>
        </button>
        <button id="btn-prev-page" class="documento-viewer-control-btn" title="Página anterior">
            <i class="fas fa-chevron-left"></i>
        </button>
        <div class="documento-page-info">
            Página <span id="page-num">1</span> de <span id="page-count">-</span>
        </div>
        <button id="btn-next-page" class="documento-viewer-control-btn" title="Página siguiente">
            <i class="fas fa-chevron-right"></i>
        </button>
        <button id="btn-last-page" class="documento-viewer-control-btn" title="Última página">
            <i class="fas fa-step-forward"></i>
        </button>
        
        <div style="width: 1px; height: 30px; background: rgba(255,255,255,0.2); margin: 0 0.5rem;"></div>
        
        <button id="btn-zoom-out" class="documento-viewer-control-btn" title="Alejar">
            <i class="fas fa-search-minus"></i>
        </button>
        <div class="documento-zoom-info">
            <span id="zoom-level">100</span>%
        </div>
        <button id="btn-zoom-in" class="documento-viewer-control-btn" title="Acercar">
            <i class="fas fa-search-plus"></i>
        </button>
        <button id="btn-zoom-reset" class="documento-viewer-control-btn" title="Restablecer zoom">
            <i class="fas fa-compress"></i>
        </button>
    </div>

    <!-- Viewer Content -->
    <div class="documento-viewer-content" id="viewer-content">
        <div class="documento-loading-overlay" id="loading-overlay">
            <i class="fas fa-spinner documento-loading-spinner"></i>
            <p class="documento-loading-text">Cargando documento...</p>
        </div>
        <div class="documento-pdf-container" id="pdf-container">
            <canvas id="pdf-canvas"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js"></script>
    <script>
        // Configurar PDF.js
        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js';

        let pdfDoc = null;
        let pageNum = 1;
        let pageIsRendering = false;
        let pageNumIsPending = null;
        let scale = 1.5;

        const canvas = document.getElementById('pdf-canvas');
        const ctx = canvas.getContext('2d');
        const loadingOverlay = document.getElementById('loading-overlay');

        // Obtener la URL del PDF
        const pdfUrl = '@Url.Action("GetPDF", new { id = Model.IdDocumento })';

        // Renderizar página
        const renderPage = (num) => {
            pageIsRendering = true;

            // Obtener página
            pdfDoc.getPage(num).then((page) => {
                const viewport = page.getViewport({ scale: scale });
                canvas.height = viewport.height;
                canvas.width = viewport.width;

                const renderCtx = {
                    canvasContext: ctx,
                    viewport: viewport
                };

                const renderTask = page.render(renderCtx);

                renderTask.promise.then(() => {
                    pageIsRendering = false;

                    if (pageNumIsPending !== null) {
                        renderPage(pageNumIsPending);
                        pageNumIsPending = null;
                    }
                });
            });

            // Actualizar número de página
            document.getElementById('page-num').textContent = num;
            updateButtons();
        };

        // Poner en cola el renderizado de página
        const queueRenderPage = (num) => {
            if (pageIsRendering) {
                pageNumIsPending = num;
            } else {
                renderPage(num);
            }
        };

        // Actualizar estado de botones
        const updateButtons = () => {
            document.getElementById('btn-first-page').disabled = pageNum <= 1;
            document.getElementById('btn-prev-page').disabled = pageNum <= 1;
            document.getElementById('btn-next-page').disabled = pageNum >= pdfDoc.numPages;
            document.getElementById('btn-last-page').disabled = pageNum >= pdfDoc.numPages;
        };

        // Actualizar nivel de zoom
        const updateZoom = () => {
            document.getElementById('zoom-level').textContent = Math.round(scale * 100);
        };

        // Cargar documento
        pdfjsLib.getDocument(pdfUrl).promise.then((pdfDoc_) => {
            pdfDoc = pdfDoc_;
            document.getElementById('page-count').textContent = pdfDoc.numPages;
            
            // Ocultar loading
            loadingOverlay.style.display = 'none';
            
            // Renderizar primera página
            renderPage(pageNum);
        }).catch((error) => {
            console.error('Error loading PDF:', error);
            loadingOverlay.innerHTML = `
                <div class="documento-error-message">
                    <i class="fas fa-exclamation-triangle"></i>
                    <h3>Error al cargar el documento</h3>
                    <p>No se pudo cargar el archivo PDF. Por favor, intenta descargarlo.</p>
                </div>
            `;
        });

        // Navegación - Primera página
        document.getElementById('btn-first-page').addEventListener('click', () => {
            if (pageNum <= 1) return;
            pageNum = 1;
            queueRenderPage(pageNum);
        });

        // Navegación - Página anterior
        document.getElementById('btn-prev-page').addEventListener('click', () => {
            if (pageNum <= 1) return;
            pageNum--;
            queueRenderPage(pageNum);
        });

        // Navegación - Página siguiente
        document.getElementById('btn-next-page').addEventListener('click', () => {
            if (pageNum >= pdfDoc.numPages) return;
            pageNum++;
            queueRenderPage(pageNum);
        });

        // Navegación - Última página
        document.getElementById('btn-last-page').addEventListener('click', () => {
            if (pageNum >= pdfDoc.numPages) return;
            pageNum = pdfDoc.numPages;
            queueRenderPage(pageNum);
        });

        // Zoom - Acercar
        document.getElementById('btn-zoom-in').addEventListener('click', () => {
            if (scale >= 3) return;
            scale += 0.25;
            updateZoom();
            queueRenderPage(pageNum);
        });

        // Zoom - Alejar
        document.getElementById('btn-zoom-out').addEventListener('click', () => {
            if (scale <= 0.5) return;
            scale -= 0.25;
            updateZoom();
            queueRenderPage(pageNum);
        });

        // Zoom - Restablecer
        document.getElementById('btn-zoom-reset').addEventListener('click', () => {
            scale = 1.5;
            updateZoom();
            queueRenderPage(pageNum);
        });

        // Atajos de teclado
        document.addEventListener('keydown', (e) => {
            // Flechas izquierda/derecha para navegar
            if (e.key === 'ArrowLeft') {
                document.getElementById('btn-prev-page').click();
            } else if (e.key === 'ArrowRight') {
                document.getElementById('btn-next-page').click();
            }
            // + y - para zoom
            else if (e.key === '+' || e.key === '=') {
                document.getElementById('btn-zoom-in').click();
            } else if (e.key === '-') {
                document.getElementById('btn-zoom-out').click();
            }
            // 0 para resetear zoom
            else if (e.key === '0') {
                document.getElementById('btn-zoom-reset').click();
            }
            // Escape para cerrar
            else if (e.key === 'Escape') {
                window.location.href = '@Url.Action("Index")';
            }
        });

        // Scroll con rueda del mouse para zoom (Ctrl + scroll)
        document.getElementById('viewer-content').addEventListener('wheel', (e) => {
            if (e.ctrlKey) {
                e.preventDefault();
                if (e.deltaY < 0) {
                    document.getElementById('btn-zoom-in').click();
                } else {
                    document.getElementById('btn-zoom-out').click();
                }
            }
        });
    </script>
}
