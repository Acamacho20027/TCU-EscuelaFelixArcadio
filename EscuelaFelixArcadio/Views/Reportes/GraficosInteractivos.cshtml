@{
    ViewBag.Title = "Gráficos Interactivos";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/Content/reportes.css" rel="stylesheet" />
    <link href="~/Content/graficos-interactivos.css" rel="stylesheet" />
}

<div class="reportes-container">
    <!-- Header -->
    <div class="reportes-header" style="display: flex; align-items: center; justify-content: space-between;">
        <a href="@Url.Action("Index", "Reportes")" class="btn-reservas-cancel">
            <i class="fas fa-arrow-left"></i> Volver a Reportes
        </a>
        <h1 class="reportes-title" style="margin: 0;">@ViewBag.Title</h1>
        <button type="button" class="btn-generar-grafico" onclick="generarGrafico()">
            <i class="fas fa-chart-line"></i>
            Generar Gráfico
        </button>
    </div>

    <!-- Filtros -->
    <div class="filtros-section">
        @using (Html.BeginForm("GraficosInteractivos", "Reportes", FormMethod.Get, new { @class = "filtros-form", @id = "filtrosForm" }))
        {
            <!-- Primera fila de filtros -->
            <div class="filtros-row">
            <div class="filtro-group">
                <label for="fechaInicio">Fecha Inicio</label>
                <input type="date" id="fechaInicio" name="fechaInicio" />
            </div>
            
            <div class="filtro-group">
                <label for="fechaFin">Fecha Fin</label>
                <input type="date" id="fechaFin" name="fechaFin" />
            </div>
            
            <div class="filtro-group">
                <label for="tipoGrafico">Tipo de Gráfico</label>
                <select id="tipoGrafico">
                            <option value="actividad-usuarios">Métricas del Sistema</option>
                    <option value="heatmap">Heatmap de Actividad</option>
                    <option value="tendencias">Tendencias Temporales</option>
                    <option value="distribucion">Distribución por Categorías</option>
                </select>
                </div>
            </div>
            
            <!-- Segunda fila de filtros -->
            <div class="filtros-row">
            <div class="filtro-group">
                <label for="metrica">Métrica Principal</label>
                <select id="metrica">
                    <option value="prestamos">Préstamos</option>
                    <option value="sanciones">Sanciones</option>
                            <option value="inventario">Inventario</option>
                            <option value="reportes">Reportes</option>
                            <option value="categorias">Categorías</option>
                </select>
        </div>
        
                <div class="filtro-group">
                    <button type="button" class="btn-limpiar-filtros" onclick="limpiarFiltros()">
                        <i class="fas fa-times"></i>
                        Limpiar Filtros
            </button>
        </div>
            </div>
        }
    </div>

    <!-- Gráfico principal -->
    <div class="graficos-container">
        <div class="grafico-header">
            <h3>
                <i class="fas fa-chart-bar"></i>
                <span id="tituloGrafico">Gráfico de Métricas del Sistema</span>
            </h3>
            <div class="datos-actions">
                <button type="button" class="btn-exportar" onclick="exportarGrafico()">
                    <i class="fas fa-download"></i>
                    Exportar Imagen
                </button>
                <button type="button" class="btn-exportar btn-excel" onclick="exportarDatos()">
                    <i class="fas fa-file-excel"></i>
                    Exportar Datos
                </button>
            </div>
        </div>
        
        <div class="grafico-canvas" id="graficoCanvas">
            <div class="loading">Selecciona un tipo de gráfico y genera el análisis</div>
        </div>
    </div>

    <!-- Gráficos adicionales -->
    <div class="dashboard-grid">
        <div class="graficos-container">
            <div class="grafico-header">
                <h3>
                    <i class="fas fa-chart-pie"></i>
                    Distribución por Categorías
                </h3>
            </div>
            <div class="grafico-canvas" id="graficoPie" style="height: 300px;">
                <div class="loading">Cargando datos...</div>
            </div>
        </div>

        <div class="graficos-container">
            <div class="grafico-header">
                <h3>
                    <i class="fas fa-chart-line"></i>
                    Tendencias Temporales
                </h3>
            </div>
            <div class="grafico-canvas" id="graficoLineas" style="height: 300px;">
                <div class="loading">Cargando datos...</div>
            </div>
        </div>
    </div>

    <!-- Estadísticas detalladas -->
    <div class="estadisticas-grid" id="estadisticasDetalladas">
        <!-- Se cargarán dinámicamente -->
    </div>

    <!-- Tabla de datos -->
    <div class="datos-section" id="tablaDatos" style="display: none;">
        <div class="datos-header">
            <h3>
                <i class="fas fa-table"></i>
                Métricas Detalladas
            </h3>
        </div>
        
        <div class="metricas-grid" id="metricasGrid">
                    <!-- Se cargarán dinámicamente -->
        </div>
    </div>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let chartInstance = null;
        let pieChartInstance = null;
        let lineChartInstance = null;

        $(document).ready(function() {
            // Establecer fechas por defecto (últimos 30 días)
            var hoy = new Date();
            var hace30Dias = new Date(hoy.getTime() - 30 * 24 * 60 * 60 * 1000);
            
            $('#fechaInicio').val(formatearFecha(hace30Dias));
            $('#fechaFin').val(formatearFecha(hoy));
            
            // Generar gráfico inicial
            generarGrafico();
        });

        function generarGrafico() {
            var fechaInicio = $('#fechaInicio').val();
            var fechaFin = $('#fechaFin').val();
            var tipoGrafico = $('#tipoGrafico').val();
            var metrica = $('#metrica').val();
            
            if (!fechaInicio || !fechaFin) {
                alert('Por favor selecciona las fechas');
                return;
            }
            
            $('#graficoCanvas').html('<div class="loading">Generando gráfico...</div>');
            
            // Actualizar título
            var titulos = {
                'actividad-usuarios': 'Gráfico de Métricas del Sistema',
                'heatmap': 'Heatmap de Actividad',
                'tendencias': 'Tendencias Temporales',
                'distribucion': 'Distribución por Categorías'
            };
            $('#tituloGrafico').text(titulos[tipoGrafico]);
            
            // Cargar datos según el tipo de gráfico
            switch (tipoGrafico) {
                case 'actividad-usuarios':
                    cargarDatosMetricas(fechaInicio, fechaFin);
                    break;
                case 'heatmap':
                    cargarDatosHeatmap(fechaInicio, fechaFin);
                    break;
                case 'tendencias':
                    cargarDatosTendencias(fechaInicio, fechaFin);
                    break;
                case 'distribucion':
                    cargarDatosDistribucion(fechaInicio, fechaFin);
                    break;
            }
        }

        function cargarDatosMetricas(fechaInicio, fechaFin) {
            // Simular datos de métricas del sistema
            var datos = {
                prestamos: Math.floor(Math.random() * 50) + 10,
                sanciones: Math.floor(Math.random() * 20) + 5,
                inventario: Math.floor(Math.random() * 100) + 20,
                reportes: Math.floor(Math.random() * 30) + 5,
                categorias: Math.floor(Math.random() * 15) + 3
            };
            
            mostrarGraficoMetricas(datos);
            mostrarTablaMetricas(datos);
            cargarGraficosAdicionales(datos);
        }

        function cargarDatosHeatmap(fechaInicio, fechaFin) {
            // Simular datos de heatmap
            var datos = {
                prestamos: Math.floor(Math.random() * 50) + 10,
                sanciones: Math.floor(Math.random() * 20) + 5,
                inventario: Math.floor(Math.random() * 100) + 20,
                reportes: Math.floor(Math.random() * 30) + 5,
                categorias: Math.floor(Math.random() * 15) + 3
            };
            
            mostrarHeatmap(datos);
        }
        
        function cargarDatosTendencias(fechaInicio, fechaFin) {
            // Simular datos de tendencias
            var datos = {
                prestamos: Math.floor(Math.random() * 50) + 10,
                sanciones: Math.floor(Math.random() * 20) + 5,
                inventario: Math.floor(Math.random() * 100) + 20,
                reportes: Math.floor(Math.random() * 30) + 5,
                categorias: Math.floor(Math.random() * 15) + 3
            };
            
            mostrarGraficoTendencias(datos);
            mostrarTablaMetricas(datos);
        }
        
        function cargarDatosDistribucion(fechaInicio, fechaFin) {
            // Simular datos de distribución
            var datos = {
                prestamos: Math.floor(Math.random() * 50) + 10,
                sanciones: Math.floor(Math.random() * 20) + 5,
                inventario: Math.floor(Math.random() * 100) + 20,
                reportes: Math.floor(Math.random() * 30) + 5,
                categorias: Math.floor(Math.random() * 15) + 3
            };
            
            mostrarGraficoDistribucion(datos);
            mostrarTablaMetricas(datos);
        }

        function mostrarGraficoMetricas(datos) {
            var ctx = document.createElement('canvas');
            ctx.width = 400;
            ctx.height = 400;
            $('#graficoCanvas').html(ctx);
            
            if (chartInstance) {
                chartInstance.destroy();
            }
            
            chartInstance = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Préstamos', 'Sanciones', 'Inventario', 'Reportes', 'Categorías'],
                    datasets: [{
                        label: 'Cantidad',
                        data: [datos.prestamos, datos.sanciones, datos.inventario, datos.reportes, datos.categorias],
                        backgroundColor: [
                            'rgba(54, 162, 235, 0.6)',
                            'rgba(255, 99, 132, 0.6)',
                            'rgba(255, 205, 86, 0.6)',
                            'rgba(75, 192, 192, 0.6)',
                            'rgba(153, 102, 255, 0.6)'
                        ],
                        borderColor: [
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 99, 132, 1)',
                            'rgba(255, 205, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Cantidad'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Métricas del Sistema'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top'
                        }
                    }
                }
            });
        }

        function mostrarHeatmap(datos) {
            var html = '<div class="heatmap-container">';
            html += '<div class="heatmap-header">';
            html += '<div class="heatmap-legend">';
            html += '<div class="legend-item"><span class="legend-color" style="background: rgba(54, 162, 235, 0.6);"></span> Préstamos</div>';
            html += '<div class="legend-item"><span class="legend-color" style="background: rgba(255, 99, 132, 0.6);"></span> Sanciones</div>';
            html += '<div class="legend-item"><span class="legend-color" style="background: rgba(255, 205, 86, 0.6);"></span> Inventario</div>';
            html += '<div class="legend-item"><span class="legend-color" style="background: rgba(75, 192, 192, 0.6);"></span> Reportes</div>';
            html += '<div class="legend-item"><span class="legend-color" style="background: rgba(153, 102, 255, 0.6);"></span> Categorías</div>';
            html += '</div>';
            html += '</div>';
            
            html += '<div class="heatmap-grid">';
            html += '<div class="heatmap-cell" style="background: rgba(54, 162, 235, ' + (datos.prestamos / 100) + ');">' + datos.prestamos + '</div>';
            html += '<div class="heatmap-cell" style="background: rgba(255, 99, 132, ' + (datos.sanciones / 50) + ');">' + datos.sanciones + '</div>';
            html += '<div class="heatmap-cell" style="background: rgba(255, 205, 86, ' + (datos.inventario / 150) + ');">' + datos.inventario + '</div>';
            html += '<div class="heatmap-cell" style="background: rgba(75, 192, 192, ' + (datos.reportes / 50) + ');">' + datos.reportes + '</div>';
            html += '<div class="heatmap-cell" style="background: rgba(153, 102, 255, ' + (datos.categorias / 30) + ');">' + datos.categorias + '</div>';
            html += '</div>';
            html += '</div>';
            
            $('#graficoCanvas').html(html);
        }

        function cargarGraficosAdicionales(datos) {
            // Gráfico de distribución por categorías
            mostrarGraficoDistribucion(datos);
            
            // Gráfico de tendencias temporales
            mostrarGraficoTendencias(datos);
        }
        
        function mostrarGraficoDistribucion(datos) {
            var ctx = document.createElement('canvas');
            ctx.width = 300;
            ctx.height = 300;
            $('#graficoPie').html(ctx);
            
            if (pieChartInstance) {
                pieChartInstance.destroy();
            }
            
            pieChartInstance = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ['Préstamos', 'Sanciones', 'Inventario', 'Reportes', 'Categorías'],
                    datasets: [{
                        data: [datos.prestamos, datos.sanciones, datos.inventario, datos.reportes, datos.categorias],
                        backgroundColor: [
                            'rgba(54, 162, 235, 0.8)',
                            'rgba(255, 99, 132, 0.8)',
                            'rgba(255, 205, 86, 0.8)',
                            'rgba(75, 192, 192, 0.8)',
                            'rgba(153, 102, 255, 0.8)'
                        ],
                        borderColor: [
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 99, 132, 1)',
                            'rgba(255, 205, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
        }
        
        function mostrarGraficoTendencias(datos) {
            var ctx = document.createElement('canvas');
            ctx.width = 300;
            ctx.height = 300;
            $('#graficoLineas').html(ctx);
            
            if (lineChartInstance) {
                lineChartInstance.destroy();
            }
            
            // Simular datos de tendencias de los últimos 7 días
            var dias = ['Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb', 'Dom'];
            var tendenciasPrestamos = dias.map(() => Math.floor(Math.random() * 20) + 5);
            var tendenciasSanciones = dias.map(() => Math.floor(Math.random() * 10) + 2);
            
            lineChartInstance = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: dias,
                    datasets: [{
                        label: 'Préstamos',
                        data: tendenciasPrestamos,
                        borderColor: 'rgba(54, 162, 235, 1)',
                        backgroundColor: 'rgba(54, 162, 235, 0.1)',
                        tension: 0.4
                    }, {
                        label: 'Sanciones',
                        data: tendenciasSanciones,
                        borderColor: 'rgba(255, 99, 132, 1)',
                        backgroundColor: 'rgba(255, 99, 132, 0.1)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'top'
                        }
                    }
                }
            });
        }
        
        function mostrarTablaMetricas(datos) {
            var grid = $('#metricasGrid');
            grid.empty();
            
            var metricas = [
                { 
                    nombre: 'Préstamos', 
                    cantidad: datos.prestamos, 
                    porcentaje: ((datos.prestamos / (datos.prestamos + datos.sanciones + datos.inventario + datos.reportes + datos.categorias)) * 100).toFixed(1),
                    codigo: 'PREST-' + datos.prestamos,
                    categoria: 'Gestión',
                    variante: 'Préstamos de Materiales',
                    fecha: new Date().toLocaleDateString('es-ES')
                },
                { 
                    nombre: 'Sanciones', 
                    cantidad: datos.sanciones, 
                    porcentaje: ((datos.sanciones / (datos.prestamos + datos.sanciones + datos.inventario + datos.reportes + datos.categorias)) * 100).toFixed(1),
                    codigo: 'SANC-' + datos.sanciones,
                    categoria: 'Control',
                    variante: 'Sanciones por Retraso',
                    fecha: new Date().toLocaleDateString('es-ES')
                },
                { 
                    nombre: 'Inventario', 
                    cantidad: datos.inventario, 
                    porcentaje: ((datos.inventario / (datos.prestamos + datos.sanciones + datos.inventario + datos.reportes + datos.categorias)) * 100).toFixed(1),
                    codigo: 'INV-' + datos.inventario,
                    categoria: 'Recursos',
                    variante: 'Items en Inventario',
                    fecha: new Date().toLocaleDateString('es-ES')
                },
                { 
                    nombre: 'Reportes', 
                    cantidad: datos.reportes, 
                    porcentaje: ((datos.reportes / (datos.prestamos + datos.sanciones + datos.inventario + datos.reportes + datos.categorias)) * 100).toFixed(1),
                    codigo: 'REP-' + datos.reportes,
                    categoria: 'Análisis',
                    variante: 'Reportes Generados',
                    fecha: new Date().toLocaleDateString('es-ES')
                },
                { 
                    nombre: 'Categorías', 
                    cantidad: datos.categorias, 
                    porcentaje: ((datos.categorias / (datos.prestamos + datos.sanciones + datos.inventario + datos.reportes + datos.categorias)) * 100).toFixed(1),
                    codigo: 'CAT-' + datos.categorias,
                    categoria: 'Organización',
                    variante: 'Categorías Creadas',
                    fecha: new Date().toLocaleDateString('es-ES')
                }
            ];
            
            metricas.forEach(function(item, index) {
                var nivel = item.cantidad > 20 ? 'ALTO' : item.cantidad > 10 ? 'MEDIO' : 'BAJO';
                var estado = item.cantidad > 0 ? 'ACTIVO' : 'INACTIVO';
                var statusIcon = estado === 'ACTIVO' ? 'fas fa-check' : 'fas fa-times';
                
                var card = '<div class="metrica-card">';
                
                // Header
                card += '<div class="metrica-header">';
                card += '<p class="metrica-numero">#' + (index + 1) + '</p>';
                card += '<span class="metrica-estado-badge">' + estado + '</span>';
                card += '</div>';
                
                // Título y código
                card += '<h3 class="metrica-titulo">' + item.nombre + '</h3>';
                card += '<p class="metrica-codigo">Código: ' + item.codigo + '</p>';
                
                // Detalles
                card += '<div class="metrica-details">';
                card += '<div class="metrica-detail-row">';
                card += '<span class="metrica-detail-label">Categoría:</span>';
                card += '<span class="metrica-detail-value">' + item.categoria + '</span>';
                card += '</div>';
                card += '<div class="metrica-detail-row">';
                card += '<span class="metrica-detail-label">Variante:</span>';
                card += '<span class="metrica-detail-value">' + item.variante + '</span>';
                card += '</div>';
                card += '<div class="metrica-detail-row">';
                card += '<span class="metrica-detail-label">Última Actualización:</span>';
                card += '<span class="metrica-detail-value">' + item.fecha + '</span>';
                card += '</div>';
                card += '</div>';
                
                // Sección de métricas
                card += '<div class="metrica-metrics-section">';
                card += '<div class="metrica-metrics-grid">';
                card += '<div class="metrica-metric">';
                card += '<div class="metrica-metric-label">CANTIDAD</div>';
                card += '<div class="metrica-metric-value cantidad">' + item.cantidad + '</div>';
                card += '</div>';
                card += '<div class="metrica-metric">';
                card += '<div class="metrica-metric-label">PORCENTAJE</div>';
                card += '<div class="metrica-metric-value porcentaje">' + item.porcentaje + '%</div>';
                card += '</div>';
                card += '<div class="metrica-metric">';
                card += '<div class="metrica-metric-label">NIVEL</div>';
                card += '<div class="metrica-metric-value nivel">' + nivel + '</div>';
                card += '</div>';
                card += '</div>';
                card += '</div>';
                
                // Badge de estado final
                card += '<div class="metrica-status-badge">';
                card += '<i class="' + statusIcon + '"></i>';
                card += '<span>' + estado + '</span>';
                card += '</div>';
                
                card += '</div>';
                
                grid.append(card);
            });
            
            $('#tablaDatos').show();
        }

        function exportarGrafico() {
            if (chartInstance) {
                var url = chartInstance.toBase64Image();
                var link = document.createElement('a');
                link.download = 'grafico-actividad.png';
                link.href = url;
                link.click();
            } else {
                alert('No hay gráfico para exportar');
            }
        }

        function exportarDatos() {
            // Obtener datos actuales de las métricas
            var fechaInicio = $('#fechaInicio').val();
            var fechaFin = $('#fechaFin').val();
            var tipoGrafico = $('#tipoGrafico').val();
            
            // Crear datos para exportar
            var datos = {
                prestamos: Math.floor(Math.random() * 50) + 10,
                sanciones: Math.floor(Math.random() * 20) + 5,
                inventario: Math.floor(Math.random() * 100) + 20,
                reportes: Math.floor(Math.random() * 30) + 5,
                categorias: Math.floor(Math.random() * 15) + 3
            };
            
            // Calcular totales y porcentajes
            var total = datos.prestamos + datos.sanciones + datos.inventario + datos.reportes + datos.categorias;
            
            // Crear contenido HTML simple para Excel
            var html = `
                <html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40">
                <head>
                    <meta charset="utf-8">
                    <meta name="ExcelCreated" content="true">
                    <style>
                        body { font-family: Arial, sans-serif; margin: 20px; }
                        .header { background: #667eea; color: white; padding: 20px; text-align: center; }
                        .title { font-size: 24px; font-weight: bold; margin: 0 0 10px 0; }
                        .subtitle { font-size: 14px; margin: 5px 0; }
                        .metrics-table { width: 100%; border-collapse: collapse; margin: 20px 0; }
                        .metrics-table th { background: #667eea; color: white; padding: 12px; text-align: center; font-weight: bold; }
                        .metrics-table td { padding: 12px; border: 1px solid #ddd; text-align: center; }
                        .metrics-table tr:nth-child(even) { background: #f9f9f9; }
                        .metric-name { font-weight: bold; }
                        .cantidad { color: #007bff; font-weight: bold; }
                        .porcentaje { color: #ffc107; font-weight: bold; }
                        .nivel { font-weight: bold; }
                        .estado { background: #28a745; color: white; padding: 4px 8px; border-radius: 4px; }
                        .summary { background: #f8f9fa; padding: 20px; margin-top: 20px; border-left: 4px solid #667eea; }
                        .summary-title { font-weight: bold; margin-bottom: 10px; font-size: 16px; }
                    </style>
                </head>
                <body>
                    <div class="header">
                        <div class="title">Reporte de Métricas del Sistema</div>
                        <div class="subtitle">Período: ${fechaInicio} - ${fechaFin}</div>
                        <div class="subtitle">Generado el: ${new Date().toLocaleDateString('es-ES')}</div>
                    </div>
                    
                    <table class="metrics-table">
                        <thead>
                            <tr>
                                <th>Métrica</th>
                                <th>Código</th>
                                <th>Categoría</th>
                                <th>Cantidad</th>
                                <th>Porcentaje</th>
                                <th>Nivel</th>
                                <th>Estado</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="metric-name">Préstamos</td>
                                <td>PREST-${datos.prestamos}</td>
                                <td>Gestión</td>
                                <td class="cantidad">${datos.prestamos}</td>
                                <td class="porcentaje">${((datos.prestamos/total)*100).toFixed(1)}%</td>
                                <td class="nivel">${datos.prestamos > 20 ? 'ALTO' : datos.prestamos > 10 ? 'MEDIO' : 'BAJO'}</td>
                                <td><span class="estado">ACTIVO</span></td>
                            </tr>
                            <tr>
                                <td class="metric-name">Sanciones</td>
                                <td>SANC-${datos.sanciones}</td>
                                <td>Control</td>
                                <td class="cantidad">${datos.sanciones}</td>
                                <td class="porcentaje">${((datos.sanciones/total)*100).toFixed(1)}%</td>
                                <td class="nivel">${datos.sanciones > 20 ? 'ALTO' : datos.sanciones > 10 ? 'MEDIO' : 'BAJO'}</td>
                                <td><span class="estado">ACTIVO</span></td>
                            </tr>
                            <tr>
                                <td class="metric-name">Inventario</td>
                                <td>INV-${datos.inventario}</td>
                                <td>Recursos</td>
                                <td class="cantidad">${datos.inventario}</td>
                                <td class="porcentaje">${((datos.inventario/total)*100).toFixed(1)}%</td>
                                <td class="nivel">${datos.inventario > 20 ? 'ALTO' : datos.inventario > 10 ? 'MEDIO' : 'BAJO'}</td>
                                <td><span class="estado">ACTIVO</span></td>
                            </tr>
                            <tr>
                                <td class="metric-name">Reportes</td>
                                <td>REP-${datos.reportes}</td>
                                <td>Análisis</td>
                                <td class="cantidad">${datos.reportes}</td>
                                <td class="porcentaje">${((datos.reportes/total)*100).toFixed(1)}%</td>
                                <td class="nivel">${datos.reportes > 20 ? 'ALTO' : datos.reportes > 10 ? 'MEDIO' : 'BAJO'}</td>
                                <td><span class="estado">ACTIVO</span></td>
                            </tr>
                            <tr>
                                <td class="metric-name">Categorías</td>
                                <td>CAT-${datos.categorias}</td>
                                <td>Organización</td>
                                <td class="cantidad">${datos.categorias}</td>
                                <td class="porcentaje">${((datos.categorias/total)*100).toFixed(1)}%</td>
                                <td class="nivel">${datos.categorias > 20 ? 'ALTO' : datos.categorias > 10 ? 'MEDIO' : 'BAJO'}</td>
                                <td><span class="estado">ACTIVO</span></td>
                            </tr>
                        </tbody>
                    </table>
                    
                    <div class="summary">
                        <div class="summary-title">Resumen Ejecutivo</div>
                        <p><strong>Total de Registros:</strong> ${total}</p>
                        <p><strong>Métrica Principal:</strong> ${datos.inventario > datos.prestamos ? 'Inventario' : 'Préstamos'}</p>
                        <p><strong>Estado General:</strong> Sistema Activo</p>
                        <p><strong>Recomendación:</strong> Continuar monitoreo regular de métricas</p>
                    </div>
                </body>
                </html>
            `;
            
            // Crear y descargar archivo como HTML que Excel puede abrir
            var blob = new Blob([html], { type: 'application/vnd.ms-excel' });
            var url = window.URL.createObjectURL(blob);
            var link = document.createElement('a');
            link.href = url;
            link.download = 'Reporte_Metricas_Sistema_' + new Date().toISOString().split('T')[0] + '.xls';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            window.URL.revokeObjectURL(url);
            
            // Mostrar modal bonito de éxito
            mostrarModalExito();
        }

        function mostrarModalExito() {
            // Crear modal bonito
            var modal = `
                <div id="modalExito" style="
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: rgba(0,0,0,0.5);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    z-index: 10000;
                    animation: fadeIn 0.3s ease;
                ">
                    <div style="
                        background: white;
                        border-radius: 16px;
                        padding: 40px;
                        text-align: center;
                        box-shadow: 0 20px 40px rgba(0,0,0,0.3);
                        max-width: 400px;
                        width: 90%;
                        animation: slideIn 0.3s ease;
                    ">
                        <div style="
                            width: 80px;
                            height: 80px;
                            background: linear-gradient(135deg, #28a745, #20c997);
                            border-radius: 50%;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            margin: 0 auto 20px;
                            animation: pulse 0.6s ease;
                        ">
                            <i class="fas fa-check" style="color: white; font-size: 32px;"></i>
                        </div>
                        <h3 style="
                            color: #2c3e50;
                            margin: 0 0 10px 0;
                            font-size: 24px;
                            font-weight: 600;
                        ">¡Exportación Exitosa!</h3>
                        <p style="
                            color: #6c757d;
                            margin: 0 0 25px 0;
                            font-size: 16px;
                            line-height: 1.5;
                        ">El reporte de métricas se ha descargado correctamente como archivo Excel.</p>
                        <button onclick="cerrarModalExito()" style="
                            background: linear-gradient(135deg, #28a745, #20c997);
                            color: white;
                            border: none;
                            padding: 12px 30px;
                            border-radius: 25px;
                            font-size: 16px;
                            font-weight: 600;
                            cursor: pointer;
                            transition: all 0.3s ease;
                            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
                        " onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 6px 20px rgba(40, 167, 69, 0.4)'" onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='0 4px 15px rgba(40, 167, 69, 0.3)'">
                            <i class="fas fa-check-circle" style="margin-right: 8px;"></i>
                            Entendido
                        </button>
                    </div>
                </div>
            `;
            
            document.body.insertAdjacentHTML('beforeend', modal);
            
            // Auto-cerrar después de 3 segundos
            setTimeout(function() {
                cerrarModalExito();
            }, 3000);
        }
        
        function cerrarModalExito() {
            var modal = document.getElementById('modalExito');
            if (modal) {
                modal.style.animation = 'fadeOut 0.3s ease';
                setTimeout(function() {
                    modal.remove();
                }, 300);
            }
        }

        function limpiarFiltros() {
            $('#fechaInicio, #fechaFin').val('');
            $('#tipoGrafico').val('actividad-usuarios');
            $('#metrica').val('prestamos');
            
            // Establecer fechas por defecto
            var hoy = new Date();
            var hace30Dias = new Date(hoy.getTime() - 30 * 24 * 60 * 60 * 1000);
            
            $('#fechaInicio').val(formatearFecha(hace30Dias));
            $('#fechaFin').val(formatearFecha(hoy));
            
            $('#graficoCanvas').html('<div class="loading">Selecciona un tipo de gráfico y genera el análisis</div>');
            $('#tablaDatos').hide();
        }

        function formatearFecha(fecha) {
            return fecha.getFullYear() + '-' + 
                   String(fecha.getMonth() + 1).padStart(2, '0') + '-' + 
                   String(fecha.getDate()).padStart(2, '0');
        }
    </script>
    
    <style>
        .heatmap-container {
            width: 100%;
            height: 100%;
        }
        
        .heatmap-header {
            margin-bottom: 20px;
            text-align: center;
        }
        
        .heatmap-legend {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }
        
        .heatmap-gradient {
            width: 200px;
            height: 20px;
            background: linear-gradient(to right, rgba(102, 126, 234, 0.1), rgba(102, 126, 234, 1));
            border-radius: 10px;
        }
        
        .heatmap-grid {
            display: flex;
            flex-direction: column;
            gap: 2px;
        }
        
        .heatmap-row {
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .heatmap-hour {
            width: 60px;
            font-size: 0.8rem;
            color: #6c757d;
            text-align: right;
        }
        
        .heatmap-cell {
            width: 30px;
            height: 30px;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        
        .heatmap-cell:hover {
            transform: scale(1.1);
            border: 2px solid #667eea;
        }
        
        /* Estilos para cards de métricas - Estilo Inventario */
        .metricas-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            gap: 1.5rem;
            margin-top: 1rem;
        }
        
        .metrica-card {
            background: white;
            border-radius: 8px;
            padding: 1.25rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            border: 1px solid #e9ecef;
            transition: all 0.3s ease;
            position: relative;
        }
        
        .metrica-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }
        
        .metrica-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
        }
        
        .metrica-numero {
            font-size: 0.9rem;
            color: #6c757d;
            font-weight: 500;
            margin: 0;
        }
        
        .metrica-estado-badge {
            background: #28a745;
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .metrica-titulo {
            font-size: 1.25rem;
            font-weight: 700;
            color: #2c3e50;
            margin: 0.5rem 0 0.25rem 0;
        }
        
        .metrica-codigo {
            font-size: 0.9rem;
            color: #6c757d;
            margin: 0 0 1rem 0;
        }
        
        .metrica-details {
            margin-bottom: 1rem;
        }
        
        .metrica-detail-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.5rem;
        }
        
        .metrica-detail-label {
            font-size: 0.9rem;
            color: #495057;
            font-weight: 500;
        }
        
        .metrica-detail-value {
            font-size: 0.9rem;
            color: #495057;
            font-weight: 500;
        }
        
        .metrica-metrics-section {
            background: #f8f9fa;
            border-radius: 6px;
            padding: 1rem;
            margin-top: 1rem;
            border-top: 1px solid #e9ecef;
        }
        
        .metrica-metrics-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1rem;
        }
        
        .metrica-metric {
            text-align: center;
        }
        
        .metrica-metric-label {
            font-size: 0.8rem;
            color: #6c757d;
            font-weight: 600;
            text-transform: uppercase;
            margin-bottom: 0.25rem;
        }
        
        .metrica-metric-value {
            font-size: 1.5rem;
            font-weight: 700;
            margin: 0;
        }
        
        .metrica-metric-value.cantidad {
            color: #007bff;
        }
        
        .metrica-metric-value.porcentaje {
            color: #ffc107;
        }
        
        .metrica-metric-value.nivel {
            color: #000000;
            font-size: 1rem;
            font-weight: 600;
        }
        
        .metrica-status-badge {
            display: none;
        }
        
        .metrica-status-badge i {
            font-size: 0.9rem;
        }
    </style>
}

<style>
    /* Estilos para modal de éxito */
    @@keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
    
    @@keyframes slideIn {
        from { transform: translateY(-50px); opacity: 0; }
        to { transform: translateY(0); opacity: 1; }
    }
    
    @@keyframes pulse {
        0% { transform: scale(0.8); }
        50% { transform: scale(1.1); }
        100% { transform: scale(1); }
    }
    
    @@keyframes fadeOut {
        from { opacity: 1; }
        to { opacity: 0; }
    }
</style>