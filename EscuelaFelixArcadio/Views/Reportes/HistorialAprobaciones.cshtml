@{
    ViewBag.Title = "Historial de Aprobaciones de Préstamos";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/Content/reportes.css" rel="stylesheet" />
    <link href="~/Content/historial-aprobaciones.css" rel="stylesheet" />
}

<div class="reportes-container">
    <!-- Header -->
    <div class="reportes-header" style="display: flex; align-items: center; justify-content: space-between;">
        <a href="@Url.Action("Index", "Reportes")" class="btn-reservas-cancel">
            <i class="fas fa-arrow-left"></i> Volver a Reportes
        </a>
        <h1 class="reportes-title" style="margin: 0;">@ViewBag.Title</h1>
        <div style="width: 200px;"></div>
    </div>

    <!-- Estadísticas generales -->
    @if (ViewBag.Estadisticas != null)
    {
        var estadisticas = (EscuelaFelixArcadio.Models.ViewModels.EstadisticasAprobacionesViewModel)ViewBag.Estadisticas;
        <div class="estadisticas-grid">
            <div class="estadistica-card">
                <div class="estadistica-valor">@estadisticas.Total</div>
                <div class="estadistica-label">Total Revisiones</div>
            </div>
            <div class="estadistica-card">
                <div class="estadistica-valor">@estadisticas.Aprobados</div>
                <div class="estadistica-label">Aprobados</div>
            </div>
            <div class="estadistica-card">
                <div class="estadistica-valor">@estadisticas.Rechazados</div>
                <div class="estadistica-label">Rechazados</div>
            </div>
            <div class="estadistica-card">
                <div class="estadistica-valor">@estadisticas.Pendientes</div>
                <div class="estadistica-label">Pendientes</div>
            </div>
            <div class="estadistica-card">
                <div class="estadistica-valor">@estadisticas.TasaAprobacion.ToString("F1")%</div>
                <div class="estadistica-label">Tasa Aprobación</div>
            </div>
            <div class="estadistica-card">
                <div class="estadistica-valor">@((estadisticas.TiempoPromedioRevision ?? 0).ToString("F0")) min</div>
                <div class="estadistica-label">Tiempo Promedio</div>
            </div>
        </div>
    }

    <!-- Filtros -->
    <div class="filtros-section">
        <!-- Barra de búsqueda -->
        <div class="search-bar">
            <input type="text" id="searchInput" placeholder="Buscar por usuario, motivo, estado..." />
        </div>
        
        @using (Html.BeginForm("HistorialAprobaciones", "Reportes", FormMethod.Get, new { @class = "filtros-form", @id = "filtrosForm" }))
        {
            <!-- Primera fila de filtros -->
            <div class="filtros-row">
                <div class="filtro-group">
                    <label for="fechaInicio">Fecha Inicio</label>
                    <input type="date" id="fechaInicio" name="fechaInicio" value="@Request.QueryString["fechaInicio"]" />
                </div>
                
                <div class="filtro-group">
                    <label for="fechaFin">Fecha Fin</label>
                    <input type="date" id="fechaFin" name="fechaFin" value="@Request.QueryString["fechaFin"]" />
                </div>
                
                <div class="filtro-group">
                    <label for="accion">Acción</label>
                    <select id="accion" name="accion">
                        <option value="">Todas</option>
                        <option value="Aprobado" @(Request.QueryString["accion"] == "Aprobado" ? "selected" : "")>Aprobado</option>
                        <option value="Rechazado" @(Request.QueryString["accion"] == "Rechazado" ? "selected" : "")>Rechazado</option>
                        <option value="Pendiente" @(Request.QueryString["accion"] == "Pendiente" ? "selected" : "")>Pendiente</option>
                        <option value="EnRevision" @(Request.QueryString["accion"] == "EnRevision" ? "selected" : "")>En Revisión</option>
                    </select>
                </div>
                
                <div class="filtro-group">
                    <button type="button" class="btn-limpiar-filtros" onclick="limpiarFiltros()">
                        <i class="fas fa-times"></i>
                        Limpiar Filtros
                    </button>
                </div>
            </div>
        }
    </div>

    <!-- Datos del historial -->
    <div class="datos-section">
        <div class="datos-header">
            <h3>
                <i class="fas fa-table"></i>
                Historial de Aprobaciones
            </h3>
            <div class="datos-actions">
                <a href="@Url.Action("ExportarPDF", new { tipoReporte = "historialaprobaciones", filtros = Request.QueryString.ToString() })" class="btn-exportar">
                    <i class="fas fa-file-pdf"></i>
                    Exportar PDF
                </a>
                <a href="@Url.Action("ExportarExcel", new { tipoReporte = "historialaprobaciones", filtros = Request.QueryString.ToString() })" class="btn-exportar btn-excel">
                    <i class="fas fa-file-excel"></i>
                    Exportar Excel
                </a>
            </div>
        </div>
        
        <!-- Cards Grid -->
        <div class="inventario-cards-grid">
                @if (Model != null)
            {
                var historial = Model as IEnumerable<object>;
                if (historial != null && historial.Any())
                {
                    foreach (var item in historial)
                    {
                        var idHistorial = item.GetType().GetProperty("IdHistorial")?.GetValue(item);
                        var numeroPrestamo = item.GetType().GetProperty("NumeroPrestamo")?.GetValue(item);
                        var solicitante = item.GetType().GetProperty("Solicitante")?.GetValue(item);
                        var revisor = item.GetType().GetProperty("Revisor")?.GetValue(item);
                        var estadoPrevio = item.GetType().GetProperty("EstadoPrevio")?.GetValue(item);
                        var estadoNuevo = item.GetType().GetProperty("EstadoNuevo")?.GetValue(item);
                        var accion = item.GetType().GetProperty("Accion")?.GetValue(item);
                        var motivoRechazo = item.GetType().GetProperty("MotivoRechazo")?.GetValue(item);
                        var comentariosRevisor = item.GetType().GetProperty("ComentariosRevisor")?.GetValue(item);
                        var fechaRevision = item.GetType().GetProperty("FechaRevision")?.GetValue(item);
                        var duracionRevision = item.GetType().GetProperty("DuracionRevision")?.GetValue(item);
                        var prioridad = item.GetType().GetProperty("Prioridad")?.GetValue(item);
                        
                        <div class="inventario-card">
                            <div class="inventario-card-header">
                                <div class="inventario-card-id">#@idHistorial</div>
                                <div class="inventario-card-status @(accion?.ToString()?.ToLower()?.Replace(" ", "-"))">
                                    @accion
                                </div>
                            </div>
                            
                            <div class="inventario-card-body">
                                <h3 class="inventario-card-title">Préstamo #@numeroPrestamo</h3>
                                <p class="inventario-card-code">Solicitante: @solicitante</p>
                                
                                <div class="inventario-card-details">
                                    <div class="inventario-detail-item">
                                        <span class="inventario-detail-label">Revisor:</span>
                                        <span class="inventario-detail-value">@revisor</span>
                                    </div>
                                    
                                    <div class="inventario-detail-item">
                                        <span class="inventario-detail-label">Estado Previo:</span>
                                        <span class="inventario-detail-value">@estadoPrevio</span>
                                    </div>
                                    
                                    <div class="inventario-detail-item">
                                        <span class="inventario-detail-label">Estado Nuevo:</span>
                                        <span class="inventario-detail-value">@estadoNuevo</span>
                                    </div>
                                    
                                    <div class="inventario-detail-item">
                                        <span class="inventario-detail-label">Fecha Revisión:</span>
                                        <span class="inventario-detail-value">@(fechaRevision != null ? ((DateTime)fechaRevision).ToString("dd/MM/yyyy HH:mm") : "-")</span>
                                    </div>
                                    
                                    <div class="inventario-detail-item">
                                        <span class="inventario-detail-label">Duración:</span>
                                        <span class="inventario-detail-value">@(duracionRevision != null ? duracionRevision.ToString() + " min" : "-")</span>
                                    </div>
                                    
                                    <div class="inventario-detail-item">
                                        <span class="inventario-detail-label">Prioridad:</span>
                                        <span class="inventario-detail-value">@prioridad</span>
                                    </div>
                                    
                                    @if (!string.IsNullOrEmpty(motivoRechazo?.ToString()))
                                    {
                                        <div class="inventario-detail-item">
                                            <span class="inventario-detail-label">Motivo Rechazo:</span>
                                            <span class="inventario-detail-value">@motivoRechazo</span>
                                        </div>
                                    }
                                    
                                    @if (!string.IsNullOrEmpty(comentariosRevisor?.ToString()))
                                    {
                                        <div class="inventario-detail-item">
                                            <span class="inventario-detail-label">Comentarios:</span>
                                            <span class="inventario-detail-value">@comentariosRevisor</span>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="empty-state">
                        <i class="fas fa-inbox"></i>
                        <h4>No hay historial de aprobaciones disponible</h4>
                        <p>No se encontraron registros que coincidan con los filtros seleccionados.</p>
                    </div>
                }
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-spinner fa-spin"></i>
                    <h4>Cargando historial...</h4>
                    <p>Por favor espere mientras se cargan los datos.</p>
                </div>
            }
        </div>
    </div>

    <!-- Formulario para registrar nueva aprobación -->
    <div class="registro-section">
        <div class="registro-header">
            <i class="fas fa-plus"></i>
            <h3>Registrar Nueva Aprobación</h3>
        </div>
        
        <div class="registro-form">
            <form id="formAprobacion">
                @Html.AntiForgeryToken()
                <div class="form-row">
                    <div class="form-group">
                        <label for="idPrestamo">ID del Préstamo</label>
                        <select id="idPrestamo" name="idPrestamo" required>
                            <option value="">Seleccionar préstamo</option>
                            @if (ViewBag.PrestamosDisponibles != null && ((List<EscuelaFelixArcadio.Models.Prestamo>)ViewBag.PrestamosDisponibles).Any())
                            {
                                foreach (var prestamo in (List<EscuelaFelixArcadio.Models.Prestamo>)ViewBag.PrestamosDisponibles)
                                {
                                    <option value="@prestamo.IdPrestamo">#@prestamo.IdPrestamo - @(prestamo.ApplicationUser?.UserName ?? "Usuario no disponible") - @prestamo.NumeroPrestamo</option>
                                }
                            }
                            else
                            {
                                <option value="" disabled>No hay préstamos disponibles</option>
                            }
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="accionFormulario">Acción</label>
                        <select id="accionFormulario" name="accionFormulario" required>
                            <option value="">Seleccionar acción</option>
                            <option value="Aprobado">Aprobado</option>
                            <option value="Rechazado">Rechazado</option>
                            <option value="Pendiente">Pendiente</option>
                            <option value="EnRevision">En Revisión</option>
                        </select>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="comentarios">Comentarios del Revisor</label>
                    <textarea id="comentarios" name="comentarios" rows="3"></textarea>
                </div>
                
                <div class="form-group">
                    <label for="motivo">Motivo de Rechazo (si aplica)</label>
                    <textarea id="motivo" name="motivo" rows="2"></textarea>
                </div>
                
                <div class="registro-actions">
                    <button type="button" class="btn-registrar" onclick="registrarAprobacion()">
                        <i class="fas fa-save"></i>
                        Registrar Aprobación
                    </button>
                    <button type="button" class="btn-limpiar-form" onclick="limpiarFormulario()">
                        <i class="fas fa-times"></i>
                        Limpiar
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>


@section scripts {
    <script>
        $(document).ready(function() {
            // Funcionalidad de búsqueda
            $('#searchInput').on('keyup', function() {
                var value = $(this).val().toLowerCase();
                $('.historial-card').filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            // Debug: verificar cambios en los campos
            $('#idPrestamo').on('change', function() {
                console.log('Préstamo seleccionado:', $(this).val());
            });

            $('#accionFormulario').on('change', function() {
                console.log('Acción seleccionada:', $(this).val());
                console.log('Acción seleccionada (DOM):', document.getElementById('accionFormulario').value);
                console.log('Índice seleccionado:', document.getElementById('accionFormulario').selectedIndex);
            });

            // También agregar evento directo al elemento
            document.getElementById('accionFormulario').addEventListener('change', function() {
                console.log('Evento directo - Acción cambiada:', this.value);
                console.log('Evento directo - Índice:', this.selectedIndex);
            });

            // Funcionalidad del formulario
            $('#formAprobacion').on('submit', function(e) {
                e.preventDefault();

                // Obtener valores directamente del DOM
                var idPrestamo = document.getElementById('idPrestamo').value;
                var accion = document.getElementById('accionFormulario').value;
                var comentarios = document.getElementById('comentarios').value;
                var motivo = document.getElementById('motivo').value;

                var formData = {
                    idPrestamo: idPrestamo,
                    accion: accion,
                    comentarios: comentarios,
                    motivo: motivo
                };

                // Debug: mostrar valores en consola
                console.log('Valores del formulario:', formData);
                console.log('ID Préstamo:', idPrestamo);
                console.log('Acción:', accion);
                console.log('Elemento accion:', document.getElementById('accion'));
                console.log('Opciones accion:', document.getElementById('accion').options);

                if (!idPrestamo || idPrestamo === '' || !accion || accion === '') {
                    var mensaje = 'Por favor complete todos los campos requeridos:\n';
                    if (!idPrestamo || idPrestamo === '') {
                        mensaje += '- Seleccione un préstamo\n';
                    }
                    if (!accion || accion === '') {
                        mensaje += '- Seleccione una acción\n';
                    }
                    alert(mensaje);
                    console.log('Validación falló - ID Préstamo:', idPrestamo, 'Acción:', accion);
                    return;
                }

                $.ajax({
                    url: '@Url.Action("RegistrarAprobacion", "Reportes")',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            // Limpiar formulario
                            $('#formAprobacion')[0].reset();

                            // Mostrar mensaje de éxito
                            alert('Aprobación registrada exitosamente');

                            // Recargar la página para mostrar el nuevo registro
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('Error al registrar la aprobación');
                    }
                });
            });
        });

        function limpiarFiltros() {
            $('#fechaInicio').val('');
            $('#fechaFin').val('');
            $('#accion').val('');
            $('#searchInput').val('');
            $('.historial-card').show();
        }

        function limpiarFormulario() {
            $('#formAprobacion')[0].reset();
        }

        function mostrarModalExito() {
            // Crear modal si no existe
            if ($('#modalExito').length === 0) {
                $('body').append(`
                    <div id="modalExito" class="modal-exito-overlay">
                        <div class="modal-exito-content">
                            <div class="modal-exito-icon">
                                <i class="fas fa-check-circle"></i>
                            </div>
                            <div class="modal-exito-title">¡Éxito!</div>
                            <div class="modal-exito-message">Aprobación registrada exitosamente</div>
                            <div class="modal-exito-actions">
                                <button class="btn-modal-exito" onclick="cerrarModalExito()">Continuar</button>
                            </div>
                        </div>
                    </div>
                `);
            }
            
            // Mostrar modal con animación
            $('#modalExito').fadeIn(300);
            
            // Auto-cerrar después de 3 segundos
            setTimeout(function() {
                cerrarModalExito();
            }, 3000);
        }

        function cerrarModalExito() {
            $('#modalExito').fadeOut(300, function() {
                location.reload();
            });
        }

        function registrarAprobacion() {
    setTimeout(function() {
        var idPrestamo = document.getElementById('idPrestamo').value;
        var accion = document.getElementById('accionFormulario').value;
        var comentarios = document.getElementById('comentarios').value;
        var motivo = document.getElementById('motivo').value;

        // Obtener el token antifalsificación
        var token = $('input[name="__RequestVerificationToken"]').val();

        var formData = {
            idPrestamo: idPrestamo,
            accionFormulario: accion,
            comentarios: comentarios,
            motivo: motivo,
            __RequestVerificationToken: token
        };

        if (!idPrestamo || !accion) {
            alert('Por favor seleccione un préstamo y una acción');
            return;
        }

        $.ajax({
            url: '@Url.Action("RegistrarAprobacion", "Reportes")',
            type: 'POST',
            data: formData,
            success: function(response) {
                if (response.success) {
                    $('#formAprobacion')[0].reset();
                    mostrarModalExito();
                } else {
                    alert('Error: ' + response.message);
                }
            },
            error: function(xhr, status, error) {
                console.log('AJAX Error:', xhr.responseText);
                alert('Error AJAX: ' + error);
            }
        });
    }, 100);
}

        function verDetalle(id) {
            // Aquí iría la lógica para ver detalles
            alert('Ver detalle del historial: ' + id);
        }

        function editarAprobacion(id) {
            // Aquí iría la lógica para editar
            alert('Editar aprobación: ' + id);
        }
    </script>
}